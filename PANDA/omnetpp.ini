[General]
network = panda.PandaNetwork
sim-time-limit = 300s
repeat = 1

# Debug and logging
debug-on-errors = true
**.cmdenv-log-level = info

# Network configuration
**.configurator.dumpAddresses = true
**.configurator.dumpTopology = true
**.configurator.dumpLinks = true
**.configurator.dumpRoutes = true

# Wireless configuration for IoT subnet
**.radioMedium.mediumLimitCache.carrierFrequency = 2.4GHz
**.wlan[*].radio.carrierFrequency = 2.4GHz
**.wlan[*].radio.bandwidth = 20MHz
**.wlan[*].mac.dcf.channelAccess.cwMin = 15
**.wlan[*].mac.dcf.channelAccess.cwMax = 1023

# IP address configuration
**.configurator.config = xmldoc("network-config.xml")

# Anomaly Observer Configuration
**.anomalyObserver_LanA.monitoredZone = "LAN_A"
**.anomalyObserver_LanA.packetThreshold = 50
**.anomalyObserver_LanA.timeWindow = 10s
**.anomalyObserver_LanA.checkInterval = 2s
**.anomalyObserver_LanA.enableGUIAlerts = true

**.anomalyObserver_LanB.monitoredZone = "LAN_B"
**.anomalyObserver_LanB.packetThreshold = 50
**.anomalyObserver_LanB.timeWindow = 10s
**.anomalyObserver_LanB.checkInterval = 2s
**.anomalyObserver_LanB.enableGUIAlerts = true

**.anomalyObserver_IoT.monitoredZone = "IoT_Subnet"
**.anomalyObserver_IoT.packetThreshold = 30
**.anomalyObserver_IoT.timeWindow = 15s
**.anomalyObserver_IoT.checkInterval = 3s
**.anomalyObserver_IoT.enableGUIAlerts = true

**.anomalyObserver_Central.monitoredZone = "Central_Network"
**.anomalyObserver_Central.packetThreshold = 100
**.anomalyObserver_Central.timeWindow = 5s
**.anomalyObserver_Central.checkInterval = 1s
**.anomalyObserver_Central.enableGUIAlerts = true

# ===========================================
# TRAFFIC PATTERN CONFIGURATIONS
# ===========================================

# Normal TCP traffic between LAN A hosts
**.lanA_host1.numApps = 2
**.lanA_host1.app[0].typename = "TcpSessionApp"
**.lanA_host1.app[0].connectAddress = "lanA_server"
**.lanA_host1.app[0].connectPort = 1000
**.lanA_host1.app[0].tOpen = 10s
**.lanA_host1.app[0].tSend = 15s
**.lanA_host1.app[0].sendBytes = 1000B
**.lanA_host1.app[0].sendScript = ""
**.lanA_host1.app[0].tClose = 25s

# Normal UDP traffic 
**.lanA_host1.app[1].typename = "UdpBasicApp"
**.lanA_host1.app[1].destAddresses = "lanB_host1"
**.lanA_host1.app[1].destPort = 5000
**.lanA_host1.app[1].messageLength = 512B
**.lanA_host1.app[1].sendInterval = 1s
**.lanA_host1.app[1].startTime = 20s
**.lanA_host1.app[1].stopTime = 100s

# Server applications
**.lanA_server.numApps = 1
**.lanA_server.app[0].typename = "TcpGenericServerApp"
**.lanA_server.app[0].localPort = 1000

**.lanB_server.numApps = 1
**.lanB_server.app[0].typename = "TcpGenericServerApp"
**.lanB_server.app[0].localPort = 2000

# LAN B normal traffic
**.lanB_host1.numApps = 2
**.lanB_host1.app[0].typename = "UdpSink"
**.lanB_host1.app[0].localPort = 5000

**.lanB_host1.app[1].typename = "TcpSessionApp"
**.lanB_host1.app[1].connectAddress = "lanB_server"
**.lanB_host1.app[1].connectPort = 2000
**.lanB_host1.app[1].tOpen = 30s
**.lanB_host1.app[1].tSend = 35s
**.lanB_host1.app[1].sendBytes = 2000B
**.lanB_host1.app[1].tClose = 45s

# IoT device traffic (lightweight)
**.iot_device1.numApps = 1
**.iot_device1.app[0].typename = "UdpBasicApp"
**.iot_device1.app[0].destAddresses = "monitoringServer"
**.iot_device1.app[0].destPort = 6000
**.iot_device1.app[0].messageLength = 64B
**.iot_device1.app[0].sendInterval = 5s
**.iot_device1.app[0].startTime = 10s

**.iot_device2.numApps = 1
**.iot_device2.app[0].typename = "UdpBasicApp"
**.iot_device2.app[0].destAddresses = "monitoringServer"
**.iot_device2.app[0].destPort = 6000
**.iot_device2.app[0].messageLength = 64B
**.iot_device2.app[0].sendInterval = 7s
**.iot_device2.app[0].startTime = 15s

# Monitoring server
**.monitoringServer.numApps = 1
**.monitoringServer.app[0].typename = "UdpSink"
**.monitoringServer.app[0].localPort = 6000

# ===========================================
# ANOMALY TRAFFIC PATTERNS
# ===========================================

# Burst traffic simulation (LAN A -> LAN B)
**.lanA_host2.numApps = 1
**.lanA_host2.app[0].typename = "UdpBasicApp"
**.lanA_host2.app[0].destAddresses = "lanB_host2"
**.lanA_host2.app[0].destPort = 7000
**.lanA_host2.app[0].messageLength = 1024B
**.lanA_host2.app[0].sendInterval = exponential(0.1s)  # High frequency
**.lanA_host2.app[0].startTime = 60s
**.lanA_host2.app[0].stopTime = 80s

# Simulated DDoS-style traffic (multiple IoT devices)
**.iot_device3.numApps = 1
**.iot_device3.app[0].typename = "UdpBasicApp"
**.iot_device3.app[0].destAddresses = "lanA_server"
**.iot_device3.app[0].destPort = 8000
**.iot_device3.app[0].messageLength = 1500B
**.iot_device3.app[0].sendInterval = exponential(0.05s)  # Very high frequency
**.iot_device3.app[0].startTime = 120s
**.iot_device3.app[0].stopTime = 140s

**.iot_device4.numApps = 1
**.iot_device4.app[0].typename = "UdpBasicApp"
**.iot_device4.app[0].destAddresses = "lanA_server"
**.iot_device4.app[0].destPort = 8000
**.iot_device4.app[0].messageLength = 1500B
**.iot_device4.app[0].sendInterval = exponential(0.05s)  # Very high frequency
**.iot_device4.app[0].startTime = 122s
**.iot_device4.app[0].stopTime = 142s

# Additional spike traffic from LAN B
**.lanB_host2.numApps = 2
**.lanB_host2.app[0].typename = "UdpSink"
**.lanB_host2.app[0].localPort = 7000

**.lanB_host2.app[1].typename = "UdpBasicApp"
**.lanB_host2.app[1].destAddresses = "lanA_host1"
**.lanB_host2.app[1].destPort = 9000
**.lanB_host2.app[1].messageLength = 2048B
**.lanB_host2.app[1].sendInterval = exponential(0.2s)
**.lanB_host2.app[1].startTime = 180s
**.lanB_host2.app[1].stopTime = 200s

# Sink for spike traffic
**.lanA_host1.app[2].typename = "UdpSink"
**.lanA_host1.app[2].localPort = 9000

# Sink for DDoS simulation
**.lanA_server.app[1].typename = "UdpSink"
**.lanA_server.app[1].localPort = 8000

# ===========================================
# ETHERNET AND LINK CONFIGURATIONS
# ===========================================

# Ethernet parameters
**.eth[*].typename = "EthernetInterface"
**.eth[*].bitrate = 100Mbps
**.eth[*].queue.typename = "DropTailQueue"
**.eth[*].queue.frameCapacity = 100

# Link delays and error rates
**.*.ethg$o[*].channel.delay = 0.1us
**.*.ethg$i[*].channel.delay = 0.1us
**.*.ethg$o[*].channel.datarate = 100Mbps
**.*.ethg$i[*].channel.datarate = 100Mbps

# ===========================================
# STATISTICS AND RESULT COLLECTION
# ===========================================

# Vector recording
**.scalar-recording = true
**.vector-recording = true

# Network layer statistics
**.routingTable.routingTableModule = ""
**.ip.procDelay = 10us
**.ip.forwarding = true

# Application layer statistics
**.app[*].**.scalar-recording = true
**.app[*].**.vector-recording = true

# Anomaly detection statistics
**.anomalyObserver*.**.scalar-recording = true
**.anomalyObserver*.**.vector-recording = true

# Performance statistics
**.**.throughput:histogram.scalar-recording = true
**.**.delay:histogram.scalar-recording = true

# ===========================================
# SIMULATION SCENARIOS
# ===========================================

[Config Normal]
description = "Normal traffic patterns only"
# Disable anomaly traffic
**.lanA_host2.numApps = 0
**.iot_device3.numApps = 0  
**.iot_device4.numApps = 0
**.lanB_host2.app[1].startTime = 1000s  # Effectively disable

[Config WithBurst]
description = "Normal traffic with burst patterns"
# Default configuration includes burst traffic

[Config WithDDoS] 
description = "Normal traffic with DDoS simulation"
# Enable aggressive DDoS-style traffic
**.iot_device3.app[0].sendInterval = exponential(0.02s)
**.iot_device4.app[0].sendInterval = exponential(0.02s)
**.anomalyObserver_IoT.ddosThreshold = 200
**.anomalyObserver_Central.ddosThreshold = 300

[Config HighSensitivity]
description = "High sensitivity anomaly detection"
**.anomalyObserver*.packetThreshold = 20
**.anomalyObserver*.anomalyMultiplier = 2.0
**.anomalyObserver*.checkInterval = 0.5s

[Config LowSensitivity]
description = "Low sensitivity anomaly detection"  
**.anomalyObserver*.packetThreshold = 200
**.anomalyObserver*.anomalyMultiplier = 5.0
**.anomalyObserver*.checkInterval = 5s